import pygame
from pygame.draw import *
from random import randint
import math
import pygame.freetype
pygame.init()
FPS = 3
screen = pygame.display.set_mode((1200, 600))

RED = (255, 0, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)
GREEN = (0, 255, 0)
MAGENTA = (255, 0, 255)
CYAN = (0, 255, 255)
BLACK = (0, 0, 0)
COLORS = [RED, BLUE, YELLOW, GREEN, MAGENTA, CYAN]
class Tank:
    '''Задает параметры танка и пушки'''
    def __init__(self,x=120,y=440,x1=150,w=10,x2=40,y2=460,l2=160,h2=80,x3=100,y3=440,l3=40,h3=20):
        self.x = x
        self.y = y
        self.w = w
        self.x1 = x1
        self.y1 = y
        self.x2 = x2
        self.y2 = y2
        self.l2 = l2
        self.h2 = h2
        self.x3 = x3
        self.y3 = y3
        self.l3 = l3
        self.h3 = h3
        self.color = COLORS[randint(0, 5)]
        self.color2 = COLORS[randint(0, 5)]
        self.color3 = COLORS[randint(0, 5)]
        rect(screen, self.color2, (self.x2, self.y2, self.l2, self.h2))
        rect(screen, self.color3, (self.x3, self.y3, self.l3, self.h3))
        line(screen, self.color,(self.x,self.y),(self.x1,self.y1),self.w)
        pygame.display.update()
    def Gun_aim(self,x,y):
        '''движение пушки'''
        line(screen, (0,0,0), (self.x, self.y), (self.x1, self.y1), self.w)
        self.y1 = y
        self.x1 = x
        line(screen, self.color, (self.x, self.y), (self.x1,self.y1), self.w)
        pygame.display.update()
    def tank_move(self,a):
        line(screen, (0, 0, 0), (self.x, self.y), (self.x1, self.y1), self.w)
        rect(screen, (0,0,0), (self.x2, self.y2, self.l2, self.h2))
        rect(screen, (0,0,0), (self.x3, self.y3, self.l3, self.h3))
        self.x += a
        self.x1 += a
        self.x2 += a
        self.x3 += a
        rect(screen, self.color2, (self.x2, self.y2, self.l2, self.h2))
        rect(screen, self.color3, (self.x3, self.y3, self.l3, self.h3))
        line(screen, self.color, (self.x, self.y), (self.x1, self.y1), self.w)
        pygame.display.update()
    def tank_update(self):
        line(screen, (0, 0, 0), (self.x, self.y), (self.x1, self.y1), self.w)
        rect(screen, (0, 0, 0), (self.x2, self.y2, self.l2, self.h2))
        rect(screen, (0, 0, 0), (self.x3, self.y3, self.l3, self.h3))
        rect(screen, self.color2, (self.x2, self.y2, self.l2, self.h2))
        rect(screen, self.color3, (self.x3, self.y3, self.l3, self.h3))
        pygame.display.update()
class Ball:
    '''задает параметры шара'''
    def __init__(self,x, y):
        self.x = x
        self.y = y
        self.r = 10
        self.color=COLORS[randint(0, 5)]
        circle(screen,self.color,(self.x,self.y),self.r)
        pygame.display.update()
    def move(self,x_change,y_change):
        '''задает движение шара'''
        circle(screen,(0,0,0),(self.x,self.y),self.r)
        self.x+=x_change
        self.y+=y_change
        circle(screen, self.color, (self.x, self.y), self.r)
        pygame.display.update()
class Ball2:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.r = 30
        self.color = COLORS[randint(0, 5)]
        circle(screen, self.color, (self.x, self.y), self.r)
        pygame.display.update()

    def move(self, x_change, y_change):
        '''задает движение шара'''
        circle(screen, (0, 0, 0), (self.x, self.y), self.r)
        self.x += x_change
        self.y += y_change
        circle(screen, self.color, (self.x, self.y), self.r)
        pygame.display.update()
class  Ball3:
    '''задает параметры шара'''
    def __init__(self,x, y):
        self.x = x
        self.y = y
        self.r = 20
        self.color=COLORS[randint(0, 5)]
        circle(screen,self.color,(self.x,self.y),self.r)
        pygame.display.update()
    def move(self,x_change,y_change):
        '''задает движение шара'''
        circle(screen,(0,0,0),(self.x,self.y),self.r)
        self.x+=x_change
        self.y+=y_change
        circle(screen, self.color, (self.x, self.y), self.r)
        pygame.display.update()
class Tank2:
    '''Задает параметры танка и пушки'''

    def __init__(self, x=1080, y=440, x1=1050, w=10, x2=1000, y2=460, l2=160, h2=80, x3=1060, y3=440, l3=40, h3=20):
        self.x = x
        self.y = y
        self.w = w
        self.x1 = x1
        self.y1 = y
        self.x2 = x2
        self.y2 = y2
        self.l2 = l2
        self.h2 = h2
        self.x3 = x3
        self.y3 = y3
        self.l3 = l3
        self.h3 = h3
        self.color = COLORS[randint(0, 5)]
        self.color2 = COLORS[randint(0, 5)]
        self.color3 = COLORS[randint(0, 5)]
        rect(screen, self.color2, (self.x2, self.y2, self.l2, self.h2))
        rect(screen, self.color3, (self.x3, self.y3, self.l3, self.h3))
        line(screen, self.color, (self.x, self.y), (self.x1, self.y1), self.w)
        pygame.display.update()

    def Gun_aim(self, x, y):
        '''движение пушки'''
        line(screen, (0, 0, 0), (self.x, self.y), (self.x1, self.y1), self.w)
        self.y1 = y
        self.x1 = x
        line(screen, self.color, (self.x, self.y), (self.x1, self.y1), self.w)
        pygame.display.update()

    def tank_move(self, a):
        line(screen, (0, 0, 0), (self.x, self.y), (self.x1, self.y1), self.w)
        rect(screen, (0, 0, 0), (self.x2, self.y2, self.l2, self.h2))
        rect(screen, (0, 0, 0), (self.x3, self.y3, self.l3, self.h3))
        self.x += a
        self.x2 += a
        self.x3 += a
        self.x1 += a
        rect(screen, self.color2, (self.x2, self.y2, self.l2, self.h2))
        rect(screen, self.color3, (self.x3, self.y3, self.l3, self.h3))
        line(screen, self.color, (self.x, self.y), (self.x1, self.y1), self.w)
        pygame.display.update()

    def tank_update(self):
        line(screen, (0, 0, 0), (self.x, self.y), (self.x1, self.y1), self.w)
        rect(screen, (0, 0, 0), (self.x2, self.y2, self.l2, self.h2))
        rect(screen, (0, 0, 0), (self.x3, self.y3, self.l3, self.h3))
        rect(screen, self.color2, (self.x2, self.y2, self.l2, self.h2))
        rect(screen, self.color3, (self.x3, self.y3, self.l3, self.h3))
        pygame.display.update()
coordinate_of_sun_x=1100
coordinate_of_sun_y=70
sun_r=30
pygame.display.update()
clock = pygame.time.Clock()
finished = False
screen.fill(BLACK)
circle(screen,YELLOW,(coordinate_of_sun_x,coordinate_of_sun_y),sun_r)
new_tank=Tank()
new_tank1=Tank2()
alpha1=0
pygame.display.update()
while not finished:
    clock.tick(FPS)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            finished = True
    while finished == False:
        strike = False
        click = False
        clock.tick(FPS)
        h=30
        while strike == False:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    finished = True
                    strike = True
                elif event.type == pygame.MOUSEMOTION:
                    x2 = event.pos[0]
                    y2 = event.pos[1]
                    tg_angle = (new_tank.y-y2)/(x2-new_tank.x)
                    alpha = math.atan(tg_angle)
                    coordinate_Gun_x= int(new_tank.x+h*math.cos(alpha))
                    coordinate_Gun_y= int(new_tank.y-h * math.sin(alpha))
                    new_tank.Gun_aim(coordinate_Gun_x,coordinate_Gun_y)
                elif event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_LEFT:
                        a = -5
                        new_tank.tank_move(a)
                    elif event.key == pygame.K_RIGHT:
                        a = 5
                        new_tank.tank_move(a)
                    elif event.key == pygame.K_d:
                        a = 5
                        new_tank1.tank_move(a)
                    elif event.key == pygame.K_a:
                        a = -5
                        new_tank1.tank_move(a)
                    elif event.key == pygame.K_w:
                        alpha1 +=0.17
                        coordinate_Gun_x = int(new_tank1.x - h * math.cos(alpha1))
                        coordinate_Gun_y = int(new_tank1.y - h * math.sin(alpha1))
                        new_tank1.Gun_aim(coordinate_Gun_x, coordinate_Gun_y)
                    elif event.key == pygame.K_s:
                        alpha1 -= 0.17
                        coordinate_Gun_x = int(new_tank1.x - h * math.cos(alpha1))
                        coordinate_Gun_y = int(new_tank1.y - h * math.sin(alpha1))
                        new_tank1.Gun_aim(coordinate_Gun_x, coordinate_Gun_y)
                    elif event.key == pygame.K_SPACE:
                        coordinate_ball_x = int(new_tank1.x - h * math.cos(alpha1))
                        coordinate_ball_y = int(new_tank1.y - h * math.sin(alpha1))
                        New_ball3 = Ball3(coordinate_ball_x, coordinate_ball_y)
                        x_change = - int(h * math.cos(alpha1))
                        y_change = -int(20 * math.sin(alpha1))
                        while New_ball3.y <= 600 and New_ball3.x <= 1200:
                            clock.tick(40)
                            New_ball3.move(x_change, y_change)
                            y_change += 1
                        circle(screen, (0, 0, 0), (New_ball3.x, New_ball3.y), 20)
                        new_tank.tank_update()
                        new_tank1.tank_update()
                        strike = True


                elif event.type == pygame.MOUSEBUTTONDOWN:
                    if event.button == 1:
                        x = event.pos[0]
                        y = event.pos[1]
                        tg_angle = (new_tank.y - y) / (x - new_tank.x)
                        alpha = math.atan(tg_angle)
                    if  event.button == 3:
                        coordinate_Gun_x = int(new_tank.x + h * math.cos(alpha))
                        coordinate_Gun_y = int(new_tank.y - h * math.sin(alpha))
                        new_tank.Gun_aim(coordinate_Gun_x, coordinate_Gun_y)
                        if h<=60:
                            h+=5

                elif event.type == pygame.MOUSEBUTTONUP:
                    if event.button == 1:
                        coordinate_ball_x = int(new_tank.x + h * math.cos(alpha))
                        coordinate_ball_y = int(new_tank.y - h * math.sin(alpha))
                        New_ball = Ball(coordinate_ball_x, coordinate_ball_y)
                        x_change = int(h * math.cos(alpha))
                        y_change = -int(20 * math.sin(alpha))
                        while New_ball.y <= 600 and New_ball.x <= 1200:
                            clock.tick(40)
                            New_ball.move(x_change, y_change)
                            y_change += 1
                        circle(screen, (0, 0, 0), (New_ball.x, New_ball.y), 10)
                        new_tank.tank_update()
                        new_tank1.tank_update()
                        strike = True
                    elif event.button == 2:
                        coordinate_ball_x = int(new_tank.x + h * math.cos(alpha))
                        coordinate_ball_y = int(new_tank.y - h * math.sin(alpha))
                        New_ball2 = Ball2(coordinate_ball_x, coordinate_ball_y)
                        x_change = int(h * math.cos(alpha))
                        y_change = -int(20 * math.sin(alpha))
                        while New_ball2.y <= 600 and New_ball2.x <= 1200:
                            clock.tick(40)
                            New_ball2.move(x_change, y_change)
                            y_change += 1
                            circle(screen, (0, 0, 0), (New_ball2.x, New_ball2.y), 30)
                        new_tank.tank_update()
                        strike=True
pygame.quit()
